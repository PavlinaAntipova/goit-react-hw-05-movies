{"version":3,"file":"static/js/234.b04efc7e.chunk.js","mappings":"+NACA,EAAuB,sBAAvB,EAAoD,sBAApD,EAAiF,sB,SCMlE,SAASA,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GASR,OAPAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GAAII,MAAK,SAAAC,GACvBN,EAAWM,EAAKC,cAEjB,CAACN,KAIJ,8BACgB,OAAZF,GAAuC,IAAnBA,EAAQS,QAAe,oDAAiC,wBAC3ET,EAAQU,KAAI,SAAAC,GAAM,OAAI,gBAAIC,UAAWC,EAAf,WACrB,cAAGD,UAAWC,EAAd,SAAuBF,EAAOG,UAC9B,cAAGF,UAAWC,EAAd,SAAuBF,EAAOI,YAFmBJ,EAAOT,a,0MCpBhEc,IAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAM,mCAGL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACoBF,IAAAA,IAAA,sCAAyCC,IAD7D,cACGE,EADH,yBAEIA,EAASZ,MAFb,kEAKA,SAAea,EAAtB,+CAAO,OAAP,oBAAO,WAA8BlB,GAA9B,uFACoBc,IAAAA,IAAA,iBAAoBd,EAApB,oBAAkCe,IADtD,cACGE,EADH,yBAEIA,EAASZ,MAFb,kEAKA,SAAec,EAAtB,+CAAO,OAAP,oBAAO,WAA6BnB,GAA7B,uFACoBc,IAAAA,IAAA,iBAAoBd,EAApB,4BAA0Ce,IAD9D,cACGE,EADH,yBAEIA,EAASZ,MAFb,kEAKA,SAAeF,EAAtB,+CAAO,OAAP,oBAAO,WAA+BH,GAA/B,uFACoBc,IAAAA,IAAA,iBAAoBd,EAApB,4BAA0Ce,IAD9D,cACGE,EADH,yBAEIA,EAASZ,MAFb,kEAKA,SAAee,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,uFACoBP,IAAAA,IAAA,gCAAmCC,EAAnC,kBAAgDM,IADpE,cACGJ,EADH,yBAEIA,EAASZ,MAFb","sources":["webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","services/movie-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Reviews_item__DJKij\",\"name\":\"Reviews_name__kx3f+\",\"text\":\"Reviews_text__EqLvx\"};","import { useState, useEffect } from 'react';\nimport { useParams} from 'react-router-dom';\n\nimport { fetchReviewById } from 'services/movie-api';\n\nimport s from './Reviews.module.css'\n\nexport default function Review() {\n  const [reviews, setReviews] = useState(null);\n  const { id } = useParams();\n  \n  useEffect(() => {\n    fetchReviewById(id).then(data => {\n      setReviews(data.results);\n    });\n  }, [id]);\n\n    \n  return (\n  <>\n    { reviews === null || reviews.length === 0 ? <p>There are no reviews :(</p> : <ul>\n      {reviews.map(review => <li className={s.item} key={review.id}>\n        <p className={s.name}>{review.author}</p>\n        <p className={s.text}>{review.content}</p>\n      </li>)}\n       </ul>}\n      </>\n      \n  );\n};","import axios from \"axios\";\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\n\nconst KEY = \"967c6f14dacb0ca10f1175f7851a5869\";\n  \n\nexport async function fetchTrendingMovie() {\n    const response = await axios.get(`/trending/movie/day?api_key=${KEY}`);\n    return response.data;\n}\n\nexport async function fetchMovieById(id) {\n    const response = await axios.get(`/movie/${id}?api_key=${KEY}`);\n    return response.data;\n}\n\nexport async function fetchCastById(id) {\n    const response = await axios.get(`/movie/${id}/credits?api_key=${KEY}`);\n    return response.data;\n}\n\nexport async function fetchReviewById(id) {\n    const response = await axios.get(`/movie/${id}/reviews?api_key=${KEY}`);\n    return response.data;\n}\n\nexport async function fetchByQuery(query) {\n    const response = await axios.get(`/search/movie?api_key=${KEY}&query=${query}`);\n    return response.data;\n}\n\n\n"],"names":["Review","useState","reviews","setReviews","id","useParams","useEffect","fetchReviewById","then","data","results","length","map","review","className","s","author","content","axios","KEY","fetchTrendingMovie","response","fetchMovieById","fetchCastById","fetchByQuery","query"],"sourceRoot":""}